
"""
* B-트리(B-Tree)
- 이진 트리를 확장해 하나의 노드가 가질 수 있는 자식 노드의 최대 숫자가 2보다 큰 트리 구조
- 각 노드에 넣을 수 있는 key의 최대 개수(k)가 정해져있고, 각 노드는 key의 개수가 (k/2)보다 적으면 안된다(root 노드 제외)

OVERFLOW(leaf): 각 노드에 넣을 수 있는 key의 최대 개수(k)보다 많아진 경우
-> 해당 노드를 둘로 나누고 가운데를 부모 노드 p로 이동
UNDERFLOW(leaf): 하나의 노드에 들어가있는 key의 최소 개수(k/2)보다 작은 경우
-> 형제 노드에서 빌려 올 수 있는 경우: 빌려 오기
-> 형제 노드에서 빌려 올 수 없는 경우(빌려오면 형제노드 underflow): 형제 노드와 합치기(사이에 껴있는 부모노드도 같이 합쳐짐)

* B* 트리
- 각 노드에 값 많이 저장하도록 함 (노드의 높이 줄이기 위함)
- 루트 노드가 아니면 최대 저장 공간의 2/3 이상 자료가 저장되어야 함
- 노드에 저장된 자료가 넘치는 경우 형제 노드로 재분배
- 모든 형제 노드가 가득찼을 때만 분할

OVERFLOW(leaf): 각 노드에 넣을 수 있는 key의 최대 개수(k)보다 많아진 경우
-> 형제 노드에 보낼수 있으면 보내기
-> 없다면, 해당 노드를 둘로 나누고 가운데를 부모 노드 p로 이동

* 시간 복잡도
- 균형 이진 검색 트리 깊이: log(2)𝑛
- 균형 d진 검색 트리 깊이: log(d)𝑛
- B-트리 깊이: log(d/2)𝑛 ~ log(d)𝑛
- B-트리 추가, 삭제, 검색: 𝑂(log𝑛)
–> 이진 검색 트리에 비해 상수 인자가 작음
"""